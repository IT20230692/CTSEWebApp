name: CI/CD

on:
  push:
    branches:
      - main  # Adjust this branch name if you're using a different default branch
  pull_request:
    branches: []

jobs:
  Continuous_Integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      # Add this step to install @babel/preset-env
      - name: Install Babel preset-env
        run: npm install --save-dev @babel/preset-env

      - name: Run tests
        run: npm test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -t ctsewebapp-ec2 .

  Continuous_Deployment:
    runs-on: ubuntu-latest
    needs: Continuous_Integration
    if: github.ref == 'refs/heads/main'  # Only deploy when pushing to main branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: SSH into EC2 and update files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/ctseproject/CTSEWebApp
            git pull origin main
          options: '-v'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: chandima99/ctsewebapp-ec2
          tags: latest

      - name: SSH into EC2 and restart Docker containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /path/to/your/ec2/project
            docker-compose down
            docker-compose up -d
